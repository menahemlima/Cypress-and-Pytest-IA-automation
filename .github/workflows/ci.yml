name: Suite de Testes ML

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  PYTHON_VERSION: '3.9'
  NODE_VERSION: '18'
  PORT: 5000

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4

  install_dependencies:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Reutilizar configuração
        uses: ./.github/actions/setup

  cypress_tests:
    needs: install_dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Reutilizar configuração
        uses: ./.github/actions/setup

      - name: Start Flask App
        run: nohup python app/aplicativo.py &
        env:
          PORT: ${{ env.PORT }}

      - name: Wait Flask
        run: |
          for i in {1..10}; do
            if curl --silent --fail http://localhost:${{ env.PORT }}; then
              echo "Flask is ready!"
              break
            fi
            sleep 2
          done
          curl --silent --fail http://localhost:${{ env.PORT }} || (echo "App failed to start" && exit 1)

      - name: Run Cypress
        run: npx cypress run

      - name: Report Cypress
        run: |
          node merge-report.js
          npx mochawesome-report-generator report.json --reportDir cypress/mochawesome-report

      - name: Generate report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-results
          path: cypress/mochawesome-report

  k6_tests:
    needs: install_dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Reutilizar configuração
        uses: ./.github/actions/setup

      - name: Install K6
        run: |
          sudo apt-get update
          sudo apt-get install -y gnupg software-properties-common
          curl -s https://dl.k6.io/key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/k6-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update
          sudo apt-get install -y k6

      - name: Start Flask App for K6
        run: nohup python app/aplicativo.py &
        env:
          PORT: ${{ env.PORT }}

      - name: Wait Flask App
        run: |
          for i in {1..10}; do
            if curl --silent --fail http://localhost:${{ env.PORT }}; then
              echo "Ready for K6!"
              break
            fi
            sleep 2
          done
          curl --silent --fail http://localhost:${{ env.PORT }} || exit 1

      - name: Run K6
        run: k6 run tests/k6/load_test.js --out json=test.json

      - name: Install k6-reporter and generate HTML
        run: |
          npm install -g k6-reporter
          k6-reporter k6-report.json

      - name: Upload K6 HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: k6-html-report
          path: k6_report.html

  pytest_metrics:
    needs: install_dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Reutilizar configuração
        uses: ./.github/actions/setup

      - name: Run Pytest
        run: |
          mkdir -p pytest-reports
          pytest tests/metrics/test_metrics.py --html=pytest-reports/pytest_report.html --self-contained-html

      - name: Generate Pytest report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: pytest-reports/pytest_report.html
